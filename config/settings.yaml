# Configuration for ProjectX Trading System

# API and Authentication Details
# These should ideally be overridden by environment variables for security in production
api:
  base_url: "https://api.topstepx.com" # As per docs
  login_url: "/api/Auth/loginKey" # As per docs
  market_hub_url_base: "wss://rtc.topstepx.com/hubs/market"
  user_hub_url_base: "wss://rtc.topstepx.com/hubs/user"
  # API_KEY_ENV_VAR and USERNAME_FOR_TOKEN_GENERATION will be read from .env
  # PROJECTX_API_TOKEN: "your_api_token_from_env" 
  # USERNAME_FOR_TOKEN_GENERATION: "your_username_from_env"

# Database Configuration
database:
  use_timescale: true # Added to enable TimescaleDB by default via settings
  default_ingestion_db: local_timescaledb # Can be 'local_timescaledb' or 'railway_timescaledb'
  local_timescaledb:
    host: "localhost"
    port: 5433 # Default from your run_timescaledb_docker.sh
    user: "postgres" # Default for many postgres images
    password_env_var: "LOCAL_DB_PASSWORD" # Specifies the ENV VAR for the password
    dbname: "projectx" # Default from your run_timescaledb_docker.sh
    # Template for constructing the DSN if individual parts are used
    dsn_template: "postgresql://{user}:{password}@{host}:{port}/{dbname}"
  railway_timescaledb:
    # RAILWAY_DATABASE_URL_ENV_VAR: "DATABASE_URL" # To be read from .env for Railway deployment

# Trading Parameters
trading:
  contracts:
    - id: "CON.F.US.MES.M25" # Example: Micro E-mini S&P 500 June 2025
    # - id: "CON.F.US.MNQ.M25" # Example: Micro E-mini Nasdaq 100 June 2025
  
  # Timeframes for OHLC aggregation and analysis (e.g., 1m, 5m, 15m, 1h, 4h)
  # Format: <number><unit_char> (m: minute, h: hour, d: day)
  timeframes:
    - "1m"
    - "5m"
    - "15m"
    - "30m"
    - "1h"
    - "4h"
    - "6h"
    - "12h"
    - "1d"
    - "1w"
    - "1M"

  # Parameters for trend_analyzer_alt.py, potentially on a per-timeframe basis
  # This is a placeholder, structure will depend on how trend_analyzer_alt.py is refactored
  analyzer_params:
    default:
      lookback_period: 20 # Example parameter
      # Add other parameters your trend_analyzer_alt might use
    "1m":
      lookback_period: 10
    "1h":
      lookback_period: 25

# Logging Configuration
logging:
  level: "INFO" # e.g., DEBUG, INFO, WARNING, ERROR
  format: "%(asctime)s - %(name)s - %(levelname)s - %(module)s - %(hub)s - %(message)s"
  # Add specific log levels for noisy libraries if needed
  # library_log_levels:
  #   signalrcore: "WARNING"
  ingester_log_file: "logs/live_ingester.log"

# Data Ingestion Service
data_ingestion:
  websocket_reconnect_delay_base: 5 # seconds
  websocket_reconnect_max_attempts: 10 

# Contract Configuration
contracts:
  default_monitor_list:
    - "CON.F.US.MES.M25"
    # - "CON.F.US.MNQ.M25"
  # Specific contract settings can be added here if needed later

# Ingestion Service Configuration
ingestion:
  default_timeframe_seconds: 60 # Default if no specific list provided, or for single-timeframe mode
  target_timeframes_seconds:
    - 60    # 1 minute
    - 300   # 5 minutes
    - 900   # 15 minutes
  main_loop_sleep_seconds: 300 # How often the main loop checks token/connection status
  # Potential future settings:
  # historical_fill_days: 7
  # data_source_priority: ['trades', 'quotes'] # if using both for OHLC

# Analysis Service Configuration
analysis:
# ... existing code ...
# logging:
#   level: "INFO" # Overall logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
#   format: "%(asctime)s - %(name)s - %(levelname)s - %(module)s - %(message)s"
# ... existing code ... 

# List of contracts to subscribe to for live data
# Initially, we'll work with one, but this could be a list later.
live_contracts:
  - contract_id: "CON.F.US.MES.M25" # Example Micro E-mini S&P 500
    # Timeframes in seconds to aggregate for this contract
    timeframes_seconds:
      - 60    # 1 minute
      - 300   # 5 minutes
      - 900   # 15 minutes 